const speechRecognitionStartButton = document.querySelector(".js-speech-recognition-start");
const textListNode = document.querySelector(".js-felismert-sz칬veg-lista");

const textList = [];

const ACTIONS = {
    Delete: "Delete",
    Read: "Read",
};

let felismer콈 = null;
if (typeof window.webkitSpeechRecognition === "function") {
    felismer콈 = new window.webkitSpeechRecognition();
} else if (typeof window.SpeechRecognition === "function") {
    felismer콈 = new window.SpeechRecognition();
}

if (felismer콈 !== null) {
    felismer콈.interimResults = true;
    felismer콈.lang = "hu-HU";

    felismer콈.addEventListener("result", updateRecognizedResults);
    felismer콈.addEventListener("end", endRecognition);
    textListNode.addEventListener("click", handleListItemButtonClicked);

    speechRecognitionStartButton.addEventListener("click", startSpeechRecognition);
}

function handleListItemButtonClicked(event) {
    const index = event.target.dataset.index;
    const action = event.target.dataset.action;

    if (action === ACTIONS.Delete && typeof index === "string") {
        textList.splice(index, 1);
        render();
    } else if (action === ACTIONS.Read && typeof index === "string") {
        synthetizeText(textList[index]);
    }
}

function render() {
    textListNode.innerHTML = textList
        .map(
            (sz칬veg, index) => `
        <li>
            ${sz칬veg} 
            <button type="button" data-action="${ACTIONS.Delete}" data-index="${index}">游딈</index>
            <button type="button" data-action="${ACTIONS.Read}" data-index="${index}">游닀</index>
        </li>
    `
        )
        .join("");
}

function startSpeechRecognition() {
    felismer콈.start();
    speechRecognitionStartButton.setAttribute("disabled", true);
}

function updateRecognizedResults(event) {
    if (event.results.length > 0 && event.results[0].isFinal === true) {
        if (event.results[0].length > 0) {
            let sz칬veg = event.results[0][0].transcript;
            textList.push(sz칬veg);
            render();
        }
    }
}

function endRecognition(event) {
    speechRecognitionStartButton.removeAttribute("disabled");
}

function getVoice() {
    let index = document.querySelector("#voiceSelect").value;
    return selectableVoices[index];
}

function synthetizeText(text) {
    if (typeof text === "string") {
        const 칲zenet = new SpeechSynthesisUtterance();
        칲zenet.text = text;
        const felolvas칩Hang = getVoice();
        console.log(felolvas칩Hang);
        if (felolvas칩Hang !== null) {
            칲zenet.voice = felolvas칩Hang;
        }
        speechSynthesis.speak(칲zenet);
    }
}
